{"version":3,"sources":["components/Header/Header.jsx","components/Contacts/Contacts.jsx","components/OneBigNews/OneBigNews.jsx","components/OneSmallNews/OneSmallNews.jsx","components/AllNews/AllNews.jsx","components/Main/Main.jsx","App.js","serviceWorker.js","redux/state.jsx","index.js"],"names":["Header","className","to","Contacts","src","alt","OneBigNews","props","toString","OneSmallNews","id","message","target","href","originalURL","captionURL","date","AllNews","Main","newsItems","state","news","map","el","App","basename","exact","path","render","newsPage","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.543ad43c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './Header.scss'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className=\"header\">\r\n            <NavLink className=\"reporter\" to=\"/Main\">Новостник</NavLink>\r\n            <nav className=\"menu\">\r\n                <ul className=\"menuItems\">\r\n                    <li className=\"menuItem\">\r\n                        <NavLink className=\"main\" to=\"/Main\">Главная</NavLink>\r\n                    </li>\r\n                    <li className=\"menuItem\">\r\n                        <NavLink className=\"news\" to=\"/AllNews\">Новости</NavLink>\r\n                    </li>\r\n                    <li className=\"menuItem\">\r\n                        <NavLink className=\"contact\" to=\"/Contacts\">Контакты</NavLink>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default Header;","import React from \"react\";\r\nimport \"./Contacts.scss\"\r\n\r\nconst Contacts = () => {\r\n    return (\r\n        <div className=\"info\">\r\n\r\n            <ul className=\"infoList\">\r\n                <li className=\"phone\">+375 (29) 4445 45 45</li>\r\n                <li className=\"fio\">Пчёлко<br/>Алексей</li>\r\n                <li className=\"email\">A.Pchelko@yandex.by</li>\r\n                <li className=\"description\">JavaScript разработчик</li>\r\n                <li className=\"skill\">ES5, ES6, <span className=\"perfectSkill\">React</span></li>\r\n            </ul>\r\n\r\n            <img className=\"photo\"\r\n                 src=\"https://decider.com/wp-content/uploads/2017/06/gilfoyle.jpg?quality=90&strip=all&w=1156&h=771&crop=1\"\r\n                 alt=\"Моя фото\"\r\n            />\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Contacts;","import React from \"react\";\r\nimport \"./OneBigNews.scss\";\r\n\r\nconst OneBigNews = (props) => {\r\n    debugger;\r\n    return (\r\n        <div>Одна большая новость на всю страницу {props.toString()}</div>\r\n    )\r\n}\r\n\r\nexport default OneBigNews","import React from \"react\";\r\nimport \"./OneSmallNews.scss\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst OneSmallNews = (props) => {\r\n    return (\r\n        <div className=\"itemNews\">\r\n            <div className=\"newsHeader\">\r\n                <NavLink to={`${\"OneNews/\"}${props.id}`}>\r\n                    {props.message};\r\n                </NavLink>\r\n            </div>\r\n            <div className=\"newsFooter\">\r\n                <div className=\"left\">\r\n                    <a target=\"_blank\" href={props.originalURL}>{props.captionURL}</a>\r\n                </div>\r\n                <div className=\"right\">{props.date}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OneSmallNews","import React from \"react\";\r\nimport \"./AllNews.scss\";\r\nimport OneSmallNews from \"../OneSmallNews/OneSmallNews\";\r\n\r\nconst AllNews = () => {\r\n    return (\r\n        <div className=\"newsContainer\">\r\n            <div className=\"title\">Быть в курсе <span className=\"titleSelect\">событий</span></div>\r\n            <div className=\"allNewsWrapper\">\r\n                <OneSmallNews/>\r\n                <OneSmallNews/>\r\n                <OneSmallNews/>\r\n                <OneSmallNews/>\r\n                <OneSmallNews/>\r\n                <OneSmallNews/>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllNews","import React from \"react\";\r\nimport \"./Main.scss\"\r\nimport OneSmallNews from \"../OneSmallNews/OneSmallNews\";\r\n\r\nconst Main = (props) => {\r\n    let newsItems = props.state.news.map( el => <OneSmallNews  id={el.id} date={el.date}\r\n            originalURL={el.originalURL} captionURL={el.captionURL} message={el.message}/> );\r\n\r\n    return (\r\n        <div className=\"newsContainer\">\r\n            <div className=\"title\">Всегда свежие <span className=\"titleURL\">новости</span></div>\r\n            <div className=\"mainNewsWrapper\">\r\n                {newsItems}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main","import React from 'react';\nimport './App.scss';\nimport Header from \"./components/Header/Header\";\nimport Contacts from \"./components/Contacts/Contacts\";\nimport OneBigNews from \"./components/OneBigNews/OneBigNews\";\nimport AllNews from \"./components/AllNews/AllNews\";\nimport Main from \"./components/Main/Main\";\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\n\nconst App = (props) => {\n    return (\n        <BrowserRouter basename=\"/news\">\n            <div className=\"App\">\n                <div className=\"container\">\n                    <Header/>\n                    <Switch>\n                        <Route exact path=\"/Main\" render={() => <Main state={props.state.newsPage}/>}/>\n                        <Route exact path=\"/OneNews\" render={() => <OneBigNews/>}/>\n                        <Route exact path=\"/AllNews\" render={() => <AllNews/>}/>\n                        <Route exact path=\"/Contacts\" render={() => <Contacts/>}/>\n                    </Switch>\n                </div>\n            </div>\n        </BrowserRouter>\n    )\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","let state = {\r\n    newsPage: {\r\n        news: [\r\n            {\r\n                id: 1,\r\n                date: \"13/07\",\r\n                originalURL: \"https://bash.im/quote/8068\",\r\n                captionURL: \"bash.im\",\r\n                message: \"раньше непонятное списывали на мистику теперь на фотошопъ\"\r\n            },\r\n            {\r\n                id: 2,\r\n                date: \"13/07\",\r\n                originalURL: \"https://bash.im/quote/417522\",\r\n                captionURL: \"bash.im\",\r\n                message: \"xxx: что меня больше всего убивает в фильмах про зомби, так это то, что никому из жертв не знакомы другие фильмы про зомби\\n\" +\r\n                    \"xxx: все как первый раз с ними сталкиваются\"\r\n            },\r\n            {\r\n                id: 3,\r\n                date: \"14/07\",\r\n                originalURL: \"https://bash.im/quote/408068\",\r\n                captionURL: \"bash.im\",\r\n                message: \"она: ты почему так долго отвечаешь?\\n\" +\r\n                    \"он: умные люди перед тем как написать сначала думают\\n\" +\r\n                    \"она: но я же сразу пишу!\"\r\n            },\r\n            {\r\n                id: 4,\r\n                date: \"15/07\",\r\n                originalURL: \"https://bash.im/quote/460808\",\r\n                captionURL: \"bash.im\",\r\n                message: \"ххх: Чтобы не было тормозов нужно разгонять не процы, а офисы с рукожопыми программистами\"\r\n            },\r\n            {\r\n                id: 5,\r\n                date: \"16/07\",\r\n                originalURL: \"https://bash.im/quote/426584\",\r\n                captionURL: \"bash.im\",\r\n                message: \"xxx: Кажется, я нашёл машину своего соседа с перфоратором - у неё в лобовом стекле чья-то ёлка торчит.\"\r\n            },\r\n            {\r\n                id: 6,\r\n                date: \"14/07\",\r\n                originalURL: \"https://bash.im/quote/424133\",\r\n                captionURL: \"bash.im\",\r\n                message: \"Из статьи про вестибюлярный аппарат:\\n\" +\r\n                    \"У речного рака тоже есть вестибулярный аппарат, но для того, чтобы он работал, в нем должны быть песчинки с речного дна. Если эти песчинки из рака достать и заменить их на железные опилки (это можно сделать, когда рак линяет), а потом подносить к раку магнит, он будет думать, что низ находится там, где магнит.\\n\" +\r\n                    \"\\n\" +\r\n                    \"Комментарий:\\n\" +\r\n                    \"Про рака порадовало. До чего–только люди не додумаются, но засунуть в рака железную стружку пока он линяет — это сильно\"\r\n            }\r\n        ]\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default state;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport state from \"./redux/state\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App state={state}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}